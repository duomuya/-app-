<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdut.mapper.ExamMapper">
    <resultMap id="BaseResultMap" type="com.cdut.pojo.Exam">
        <id column="exam_id" jdbcType="VARCHAR" property="examId"/>
        <result column="exam_name" jdbcType="VARCHAR" property="examName"/>
        <result column="exam_des" jdbcType="VARCHAR" property="examDes"/>
        <result column="exam_last" jdbcType="INTEGER" property="examLast"/>
        <result column="exam_number" jdbcType="INTEGER" property="examNumber"/>
        <result column="exam_start" jdbcType="TIMESTAMP" property="examStart"/>
        <result column="exam_course" jdbcType="VARCHAR" property="examCourse"/>
        <result column="paper_id" jdbcType="VARCHAR" property="paperId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
    </resultMap>
    <sql id="Base_Column_List">
    exam_id, exam_name, exam_des, exam_last, exam_number, exam_start, exam_course, paper_id,
    user_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from Exam
        where exam_id = #{examId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from Exam
    where exam_id = #{examId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.cdut.pojo.Exam">
    insert into Exam (exam_id, exam_name, exam_des,
    exam_last, exam_number, exam_start,
    exam_course, paper_id, user_id
    )
    values (#{examId,jdbcType=VARCHAR}, #{examName,jdbcType=VARCHAR}, #{examDes,jdbcType=VARCHAR},
    #{examLast,jdbcType=INTEGER}, #{examNumber,jdbcType=INTEGER}, #{examStart,jdbcType=TIMESTAMP},
    #{examCourse,jdbcType=VARCHAR}, #{paperId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}
    )
  </insert>
    <insert id="insertSelective" parameterType="com.cdut.pojo.Exam">
        insert into Exam
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="examId != null">
                exam_id,
            </if>
            <if test="examName != null">
                exam_name,
            </if>
            <if test="examDes != null">
                exam_des,
            </if>
            <if test="examLast != null">
                exam_last,
            </if>
            <if test="examNumber != null">
                exam_number,
            </if>
            <if test="examStart != null">
                exam_start,
            </if>
            <if test="examCourse != null">
                exam_course,
            </if>
            <if test="paperId != null">
                paper_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="examId != null">
                #{examId,jdbcType=VARCHAR},
            </if>
            <if test="examName != null">
                #{examName,jdbcType=VARCHAR},
            </if>
            <if test="examDes != null">
                #{examDes,jdbcType=VARCHAR},
            </if>
            <if test="examLast != null">
                #{examLast,jdbcType=INTEGER},
            </if>
            <if test="examNumber != null">
                #{examNumber,jdbcType=INTEGER},
            </if>
            <if test="examStart != null">
                #{examStart,jdbcType=TIMESTAMP},
            </if>
            <if test="examCourse != null">
                #{examCourse,jdbcType=VARCHAR},
            </if>
            <if test="paperId != null">
                #{paperId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cdut.pojo.Exam">
        update Exam
        <set>
            <if test="examName != null">
                exam_name = #{examName,jdbcType=VARCHAR},
            </if>
            <if test="examDes != null">
                exam_des = #{examDes,jdbcType=VARCHAR},
            </if>
            <if test="examLast != null">
                exam_last = #{examLast,jdbcType=INTEGER},
            </if>
            <if test="examNumber != null">
                exam_number = #{examNumber,jdbcType=INTEGER},
            </if>
            <if test="examStart != null">
                exam_start = #{examStart,jdbcType=TIMESTAMP},
            </if>
            <if test="examCourse != null">
                exam_course = #{examCourse,jdbcType=VARCHAR},
            </if>
            <if test="paperId != null">
                paper_id = #{paperId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
        </set>
        where exam_id = #{examId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cdut.pojo.Exam">
    update Exam
    set exam_name = #{examName,jdbcType=VARCHAR},
    exam_des = #{examDes,jdbcType=VARCHAR},
    exam_last = #{examLast,jdbcType=INTEGER},
    exam_number = #{examNumber,jdbcType=INTEGER},
    exam_start = #{examStart,jdbcType=TIMESTAMP},
    exam_course = #{examCourse,jdbcType=VARCHAR},
    paper_id = #{paperId,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=VARCHAR}
    where exam_id = #{examId,jdbcType=VARCHAR}
  </update>

    <select id="selectByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from Exam
        limit #{pageStart},#{pageLimit}
    </select>

    <select id="selAllCount" resultType="java.lang.Integer">
    select count(*) from Exam
  </select>

    <select id="selCount" resultType="java.lang.Integer">
    select count(*) from Exam where user_id=#{userId}
  </select>

    <delete id="batchDeleteByPrimaryKey">
        delete from Exam
        where exam_id in
        (
        <foreach collection="list" item="examId" separator=",">
            #{examId}
        </foreach>
        )
    </delete>

    <select id="selectByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from Exam
        where user_id=#{userId}
        limit #{pageStart},#{pageLimit}
    </select>
</mapper>